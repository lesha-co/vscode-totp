{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"",".././src/store/versions/auto.ts",".././src/store/context.ts",".././src/commands.ts",".././src/buttons.ts",".././node_modules/simple-totp/dist/index.js",".././node_modules/simple-totp/dist/getKey.js",".././node_modules/simple-totp/dist/base32decode.js",".././node_modules/simple-totp/dist/getCode.js",".././node_modules/simple-totp/dist/getCounter.js",".././node_modules/simple-totp/dist/getHMAC.js","../external \"crypto\"",".././src/store/versions/v1.ts",".././src/extension.ts",".././src/commands/pick.ts",".././src/pickOTP.ts",".././src/store/index.ts",".././node_modules/simple-totp/dist/getTOTP.js",".././src/store/crypto.ts",".././src/store/versions/v2.ts",".././src/store/passphraseGetter.ts",".././src/commands/new.ts",".././src/addTOTP.ts",".././src/commands/edit.ts",".././src/makeStatusBarItem.ts",".././src/commands/backup.ts",".././src/store/askForEncryptionPassphrase.ts",".././src/commands/restore.ts",".././src/commands/clear.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","latest","persistV2","auto","storeInState","backup","clear","ctx","globalState","STORE_VER_KEY","loadFromState","persistV1","backupData","passphraseGetter","JSON","parse","restore","addCode","code","allKeys","newKeys","replaceCode","newCode","map","deleteCode","filter","merge","data","ctxCodes","forEach","undefined","find","ctxCode","stringify","console","log","push","Command","addButton","iconPath","ThemeIcon","tooltip","editButton","backupButton","restoreButton","getKey_1","getKey","base32decode_1","base32decode","getCode_1","getCode","getCounter_1","getCounter","getHMAC_1","getHMAC","getTOTP_1","getTOTP","input","encoding","Buffer","isBuffer","Error","from","b32string","length","codepoints","Array","x","indexOf","some","buf","alloc","index","array","bitOffset","startingByte","Math","floor","shiftInU16","newU8","readUInt8","writeUInt8","newU16","readUInt16BE","writeUInt16BE","hmac","nDigits","offset","readUInt32BE","pow","toString","padStart","timestamp","T0","Tx","adjustedTimestamp","remainingMs","counter","counterBuffer","writeUInt32BE","__importDefault","this","mod","crypto_1","secret","message","default","createHmac","update","digest","codes","passphrase","cleartext","encrypted","encode","decode","context","subscriptions","commands","registerCommand","NEW","totpNew","PICK","totpPick","BACKUP","totpBackup","RESTORE","totpRestore","EDIT","totpEdit","CLEAR","totpClear","makeStatusBarItem","result","pickOTPService","button","executeCommand","info","getInfo","env","clipboard","writeText","window","showInformationMessage","Promise","resolve","reject","disposables","dispose","it","items","label","qp","createQuickPick","title","buttons","onDidChangeSelection","onDidTriggerButton","btn","onDidHide","show","totp","type","TX","prefix","remaining","seed","Date","now","_a","crypto","scryptSync","iv","cipher","createCipheriv","final","decipher","createDecipheriv","decrypted","makePasswordCache","showErrorMessage","showInputBox","prompt","addTOTP","AdditionalEncodings","findNextStep","askForEncoding","askForCode","needCustomParams","askForCustomParams","askForParameters","askForName","askForPrefix","state","encodings","BASE_32","OTPAUTH_URI","pick","showQuickPick","placeHolder","defaultParams","id","description","detail","ignoreFocusOut","_T0","_TX","_nDigits","parseInt","v","toUpperCase","allCharacters","test","charCount","getPlaceholder","validateInput","error","step","collectInputs","pickForEdit","deleteRoutine","renameRoutine","newName","entry","RENAME","DELETE","myStatusBarItem","createStatusBarItem","StatusBarAlignment","Right","text","command","askForEncryptionPassphrase","content","workspace","openTextDocument","language","showTextDocument","password","uri","showOpenDialog","openLabel","canSelectMany","canSelectFiles","fs","readFile","YES","round","random"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = require(\"vscode\");","import { Persist, STORE_VER_KEY } from \"../context\";\nimport { persistV1 } from \"./v1\";\nimport { persistV2 } from \"./v2\";\nconst latest = persistV2;\nexport const auto: Persist = {\n  storeInState: latest.storeInState,\n  backup: latest.backup,\n  clear: latest.clear,\n  async loadFromState(ctx) {\n    const v = ctx.globalState.get(STORE_VER_KEY);\n    switch (v) {\n      case 2:\n        return await persistV2.loadFromState(ctx);\n      case 1:\n      default:\n        return await persistV1.loadFromState(ctx);\n    }\n  },\n  async restore(ctx, backupData, passphraseGetter) {\n    const v = JSON.parse(backupData)[STORE_VER_KEY];\n    switch (v) {\n      case 2:\n        return await persistV2.restore(ctx, backupData, passphraseGetter);\n      case 1:\n      default:\n        return await persistV1.restore(ctx, backupData, passphraseGetter);\n    }\n  },\n};\n","import { Code } from \"./index\";\nimport { ExtensionContext } from \"vscode\";\nimport { auto } from \"./versions/auto\";\nexport const STORE_VER_KEY = \"STORE_VER\";\nexport type PassphraseGetter = () => Promise<string | null>;\nexport interface Persist {\n  storeInState(ctx: ExtensionContext, codes: Code[]): Promise<void>;\n  loadFromState(ctx: ExtensionContext): Promise<Code[]>;\n  backup(\n    ctx: ExtensionContext,\n    codes: Code[],\n    passphrase: string\n  ): Promise<string>;\n  restore(\n    ctx: ExtensionContext,\n    backupData: string,\n    passphraseGetter: PassphraseGetter\n  ): Promise<Code[]>;\n  clear(ctx: ExtensionContext): Promise<void>;\n}\n\nexport const addCode = async (ctx: ExtensionContext, code: Code) => {\n  const allKeys = await auto.loadFromState(ctx);\n  const newKeys = [code, ...allKeys];\n  await auto.storeInState(ctx, newKeys);\n};\n\nexport const replaceCode = async (\n  ctx: ExtensionContext,\n  name: string,\n  newCode: Code\n) => {\n  const allKeys = await auto.loadFromState(ctx);\n  const newKeys = allKeys.map((key) => {\n    if (key.name === name) {\n      return newCode;\n    }\n    return key;\n  });\n  await auto.storeInState(ctx, newKeys);\n};\nexport const deleteCode = async (ctx: ExtensionContext, name: string) => {\n  const allKeys = await auto.loadFromState(ctx);\n  const newKeys = allKeys.filter((key) => key.name !== name);\n  await auto.storeInState(ctx, newKeys);\n};\n\nexport const merge = async (ctx: ExtensionContext, data: Code[]) => {\n  const ctxCodes = (await auto.loadFromState(ctx)) || [];\n\n  data.forEach((code) => {\n    const c = ctxCodes.find(\n      (ctxCode) => JSON.stringify(ctxCode) === JSON.stringify(code)\n    );\n\n    if (c === undefined) {\n      console.log(`merging code ${code.name}`);\n      ctxCodes.push(code);\n    }\n  });\n\n  await auto.storeInState(ctx, ctxCodes);\n};\n","export enum Command {\n  PICK = \"totp.pick\",\n  BACKUP = \"totp.backup\",\n  RESTORE = \"totp.restore\",\n  EDIT = \"totp.edit\",\n  CLEAR = \"totp.clear\",\n  NEW = \"totp.new\",\n}\n","import { QuickInputButton, ThemeIcon } from \"vscode\";\n\nexport const addButton: QuickInputButton = {\n  iconPath: new ThemeIcon(\"add\"),\n  tooltip: \"Add new OTP\",\n};\n\nexport const editButton: QuickInputButton = {\n  iconPath: new ThemeIcon(\"edit\"),\n  tooltip: \"Edit OTP\",\n};\nexport const backupButton: QuickInputButton = {\n  iconPath: new ThemeIcon(\"save\"),\n  tooltip: \"Backup codes\",\n};\nexport const restoreButton: QuickInputButton = {\n  iconPath: new ThemeIcon(\"folder-opened\"),\n  tooltip: \"Restore from backup\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar getKey_1 = require(\"./getKey\");\nexports.getKey = getKey_1.getKey;\nvar base32decode_1 = require(\"./base32decode\");\nexports.base32decode = base32decode_1.base32decode;\nvar getCode_1 = require(\"./getCode\");\nexports.getCode = getCode_1.getCode;\nvar getCounter_1 = require(\"./getCounter\");\nexports.getCounter = getCounter_1.getCounter;\nvar getHMAC_1 = require(\"./getHMAC\");\nexports.getHMAC = getHMAC_1.getHMAC;\nvar getTOTP_1 = require(\"./getTOTP\");\nexports.getTOTP = getTOTP_1.getTOTP;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base32decode_1 = require(\"./base32decode\");\nexports.getKey = function (input, encoding) {\n    if (Buffer.isBuffer(input))\n        return input;\n    if (encoding === undefined) {\n        throw new Error(\"Encoding should be provided for string inputs (any Buffer encoding or 'base32')\");\n    }\n    if (encoding === \"base32\")\n        return base32decode_1.base32decode(input);\n    return Buffer.from(input, encoding);\n};\n//# sourceMappingURL=getKey.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nvar padding = \"=\";\nexports.base32decode = function (b32string) {\n    if (b32string.length % 8)\n        throw new Error(\"input should have length of multiple of 8\");\n    var codepoints = Array.from(b32string).map(function (x) { return alphabet.indexOf(x); });\n    if (codepoints.some(function (x) { return x === -1; }))\n        throw new Error(\"Illegal characters found in input\");\n    var buf = Buffer.alloc((b32string.length * 5) / 8);\n    codepoints.forEach(function (code, index, array) {\n        // 000000001111111122222222  bytes\n        // **********OOOOO*********  third character will have these bits to it\n        // --------->                bitOffset = 2x5= 10\n        //         ->                offsetInByte = 10%8= 2\n        //          <---------------> u16\n        //                 <-------- shiftInU16 = 9\n        var bitOffset = index * 5;\n        // we need to know which byte corresponds to given bit offset\n        var startingByte = Math.floor(bitOffset / 8);\n        // we need to know how far we are into this byte\n        var offsetInByte = bitOffset % 8;\n        // we will work with u16 because our 5 bits can cross byte border and it's easier to just\n        // assume that we're working with u16s\n        var shiftInU16 = 16 - 5 - offsetInByte;\n        if (index === array.length - 1) {\n            // in case of last character startingByte would be the last one and we can't read u16\n            // anymore, in that case we will work with u8\n            var u8 = buf.readUInt8(startingByte);\n            var newU8 = u8 | code;\n            buf.writeUInt8(newU8, startingByte);\n        }\n        else {\n            var u16 = buf.readUInt16BE(startingByte);\n            var newU16 = u16 | (code << shiftInU16);\n            buf.writeUInt16BE(newU16, startingByte);\n        }\n    });\n    return buf;\n};\n//# sourceMappingURL=base32decode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCode = function (hmac, nDigits) {\n    var offset = hmac.readUInt8(hmac.length - 1) & 0xf;\n    var fourBytes = hmac.readUInt32BE(offset) & 0x7fffffff;\n    return (fourBytes % Math.pow(10, nDigits)).toString(10).padStart(nDigits, \"0\");\n};\n//# sourceMappingURL=getCode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCounter = function (timestamp, T0, Tx) {\n    var adjustedTimestamp = timestamp - T0;\n    var remainingMs = Tx - (adjustedTimestamp % Tx);\n    var counter = Math.floor(adjustedTimestamp / Tx);\n    var counterBuffer = Buffer.alloc(8, 0);\n    // TODO: use writeBigInt64BE(counter, 0) (requires node v12.something)\n    // This can wait until 2038 when 64bit time stamps become necessity\n    counterBuffer.writeUInt32BE(counter, 4);\n    return { counterBuffer: counterBuffer, remainingMs: remainingMs };\n};\n//# sourceMappingURL=getCounter.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto_1 = __importDefault(require(\"crypto\"));\nexports.getHMAC = function (secret, message) {\n    return crypto_1.default\n        .createHmac(\"sha1\", secret)\n        .update(message)\n        .digest();\n};\n//# sourceMappingURL=getHMAC.js.map","module.exports = require(\"crypto\");","import { Persist, STORE_VER_KEY } from \"../context\";\nimport { Code } from \"../index\";\nimport { window } from \"vscode\";\nimport { encode, decode } from \"../crypto\";\nconst KEY = \"TOTP\";\nconst STORE_VER = 1;\nexport const persistV1: Persist = {\n  async storeInState(ctx, codes) {\n    ctx.globalState.update(KEY, codes);\n    ctx.globalState.update(STORE_VER_KEY, STORE_VER);\n  },\n\n  async loadFromState(ctx) {\n    const value = ctx.globalState.get<Code[] | null>(KEY, null);\n    return value === null ? [] : value;\n  },\n\n  async backup(ctx, data, passphrase) {\n    const value =\n      passphrase === \"\"\n        ? { cleartext: data }\n        : {\n            encrypted: encode(JSON.stringify(data), passphrase),\n          };\n    const json = JSON.stringify(value, null, 2);\n    return json;\n  },\n\n  async restore(ctx, backupData, passphraseGetter) {\n    let passphrase;\n    const { cleartext, encrypted } = JSON.parse(backupData);\n    const codes: Code[] = [];\n    if (cleartext !== undefined) {\n      codes.push(...cleartext);\n    }\n    if (encrypted !== undefined) {\n      passphrase = await passphraseGetter();\n      if (!passphrase) {\n        throw new Error(\"No passphrase was supplied\");\n      }\n      codes.push(...JSON.parse(decode(encrypted, passphrase)));\n    }\n\n    return codes;\n  },\n  async clear(ctx): Promise<void> {\n    ctx.globalState.update(KEY, null);\n    ctx.globalState.update(STORE_VER_KEY, null);\n  },\n};\n","import { ExtensionContext, commands } from \"vscode\";\nimport { totpPick } from \"./commands/pick\";\nimport { Command } from \"./commands\";\nimport { totpNew } from \"./commands/new\";\nimport { totpEdit } from \"./commands/edit\";\nimport { makeStatusBarItem } from \"./makeStatusBarItem\";\nimport { totpBackup } from \"./commands/backup\";\nimport { totpRestore } from \"./commands/restore\";\nimport { totpClear } from \"./commands/clear\";\n\nexport function activate(context: ExtensionContext) {\n  context.subscriptions.push(\n    commands.registerCommand(Command.NEW, () => totpNew(context)),\n    commands.registerCommand(Command.PICK, () => totpPick(context)),\n    commands.registerCommand(Command.BACKUP, () => totpBackup(context)),\n    commands.registerCommand(Command.RESTORE, () => totpRestore(context)),\n    commands.registerCommand(Command.EDIT, () => totpEdit(context)),\n    commands.registerCommand(Command.CLEAR, () => totpClear(context)),\n    makeStatusBarItem()\n  );\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","import { ExtensionContext, commands, env, window } from \"vscode\";\nimport { pickOTPService } from \"../pickOTP\";\nimport { getInfo } from \"../store/index\";\nimport { Command } from \"../commands\";\nimport { addButton, editButton, restoreButton, backupButton } from \"../buttons\";\nimport { auto } from \"../store/versions/auto\";\nexport const totpPick = async (context: ExtensionContext) => {\n  try {\n    const ctxCodes = await auto.loadFromState(context);\n    const result = await pickOTPService(ctxCodes);\n\n    if (result.button) {\n      switch (result.data) {\n        case addButton: {\n          await commands.executeCommand(Command.NEW);\n          break;\n        }\n        case editButton: {\n          await commands.executeCommand(Command.EDIT);\n          break;\n        }\n        case restoreButton: {\n          await commands.executeCommand(Command.RESTORE);\n          break;\n        }\n        case backupButton: {\n          await commands.executeCommand(Command.BACKUP);\n          break;\n        }\n      }\n    } else {\n      const info = getInfo(result.data);\n      env.clipboard.writeText(info.code);\n      window.showInformationMessage(\"Passphrase copied to clipboard\");\n    }\n  } catch (x) {\n    // debugger;\n  }\n};\n","import { Code } from \"./store/index\";\nimport { window, QuickInputButton, QuickPickItem, Disposable } from \"vscode\";\nimport { addButton, editButton, backupButton, restoreButton } from \"./buttons\";\n\nexport type Result<TItem> =\n  | { button: true; data: QuickInputButton }\n  | { button: false; data: TItem };\n\nexport const pickOTPService = async (data: Code[]): Promise<Result<Code>> =>\n  await new Promise((resolve, reject) => {\n    const disposables: Disposable[] = [];\n    const dispose = () => disposables.forEach((it) => it.dispose());\n    type Item = QuickPickItem & { code: Code };\n    const items: Item[] = data.map((code) => ({\n      code: code,\n      label: code.name,\n    }));\n\n    const qp = window.createQuickPick<Item>();\n    disposables.push(qp);\n    qp.title = \"OTP Generator\";\n    qp.items = items;\n    qp.buttons = [addButton, editButton, backupButton, restoreButton];\n    disposables.push(\n      qp.onDidChangeSelection((items) => {\n        const data = items[0].code;\n        resolve({ button: false, data });\n        dispose();\n      }),\n      qp.onDidTriggerButton((btn) => {\n        resolve({ button: true, data: btn });\n        dispose();\n      }),\n      qp.onDidHide(() => {\n        dispose();\n        reject();\n      })\n    );\n    qp.show();\n  });\n","import { getTOTP } from \"simple-totp\";\nexport type Code = {\n  name: string;\n  secret: string;\n  prefix?: string;\n  type: BufferEncoding | \"base32\";\n  T0: number;\n  TX: number;\n  nDigits: number;\n};\n\nexport const getInfo = (code: Code) => {\n  const { totp, remainingMs } = getTOTP(\n    code.secret,\n    code.type,\n    undefined,\n    code.nDigits,\n    code.T0,\n    code.TX\n  );\n  const prefix = code.prefix || \"\";\n  const remaining = Math.floor(remainingMs / 1000)\n    .toString(10)\n    .padStart(2, \"0\");\n  return { code: `${prefix}${totp}`, remaining, name: code.name };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar getCode_1 = require(\"./getCode\");\nvar getCounter_1 = require(\"./getCounter\");\nvar getHMAC_1 = require(\"./getHMAC\");\nvar getKey_1 = require(\"./getKey\");\nexports.getTOTP = function (seed, encoding, timestamp, nDigits, T0, Tx) {\n    if (timestamp === void 0) { timestamp = Date.now(); }\n    if (nDigits === void 0) { nDigits = 6; }\n    if (T0 === void 0) { T0 = 0; }\n    if (Tx === void 0) { Tx = 30000; }\n    var secret = getKey_1.getKey(seed, encoding);\n    var _a = getCounter_1.getCounter(timestamp, T0, Tx), counterBuffer = _a.counterBuffer, remainingMs = _a.remainingMs;\n    var hmac = getHMAC_1.getHMAC(secret, counterBuffer);\n    var totp = getCode_1.getCode(hmac, nDigits);\n    return { totp: totp, remainingMs: remainingMs };\n};\n//# sourceMappingURL=getTOTP.js.map","import * as crypto from \"crypto\";\nconst EXPORT_ENCODING = \"hex\";\nconst ALGORITHM = \"aes-192-cbc\";\n\nexport const encode = (data: string, passphrase: string) => {\n  // Use the async `crypto.scrypt()` instead.\n  const key = crypto.scryptSync(passphrase, \"salt\", 24);\n  // Use `crypto.randomBytes` to generate a random iv instead of the static iv\n  // shown here.\n  const iv = Buffer.alloc(16, 0); // Initialization vector.\n\n  const cipher = crypto.createCipheriv(ALGORITHM, key, iv);\n\n  let encrypted = cipher.update(data, \"utf8\", EXPORT_ENCODING);\n  encrypted += cipher.final(EXPORT_ENCODING);\n  return encrypted;\n};\n\nexport const decode = (data: string, passphrase: string) => {\n  // Use the async `crypto.scrypt()` instead.\n  const key = crypto.scryptSync(passphrase, \"salt\", 24);\n  // Use `crypto.randomBytes` to generate a random iv instead of the static iv\n  // shown here.\n  const iv = Buffer.alloc(16, 0); // Initialization vector.\n\n  const decipher = crypto.createDecipheriv(ALGORITHM, key, iv);\n\n  let decrypted = decipher.update(data, EXPORT_ENCODING, \"utf8\");\n  decrypted += decipher.final(\"utf8\");\n  return decrypted;\n  // Prints: some clear text data\n};\n","import { Persist, STORE_VER_KEY } from \"../context\";\nimport { window } from \"vscode\";\nimport { persistV1 } from \"./v1\";\nimport { makePasswordCache } from \"../passphraseGetter\";\nconst KEY = \"TOTP\";\nconst STORE_VER = 2;\nconst passphraseGetter = makePasswordCache();\nexport const persistV2: Persist = {\n  async storeInState(ctx, codes) {\n    const passphrase = await passphraseGetter();\n    if (passphrase === null) {\n      await window.showErrorMessage(\"Can't update storage\");\n      return;\n    }\n    ctx.globalState.update(KEY, await this.backup(ctx, codes, passphrase));\n    ctx.globalState.update(STORE_VER_KEY, STORE_VER);\n  },\n\n  async loadFromState(ctx) {\n    const backupData = ctx.globalState.get<string>(KEY, \"{}\");\n    const data = await this.restore(ctx, backupData, passphraseGetter);\n    return data;\n  },\n\n  backup: persistV1.backup,\n  restore: persistV1.restore,\n  clear: persistV1.clear,\n};\n","import { PassphraseGetter } from \"./context\";\nimport { window } from \"vscode\";\n\nexport const makePasswordCache: () => PassphraseGetter = () => {\n  let passphrase: string | null = null;\n  return async () => {\n    if (passphrase) {\n      return passphrase;\n    }\n\n    const input = await window.showInputBox({\n      prompt: \"Enter passphrase to unlock OTP storage\",\n    });\n\n    if (input) {\n      passphrase = input;\n    }\n\n    return passphrase;\n  };\n};\n","import { ExtensionContext } from \"vscode\";\nimport { addTOTP } from \"../addTOTP\";\nimport { addCode } from \"../store/context\";\nexport const totpNew = async (context: ExtensionContext) => {\n  const code = await addTOTP(context);\n  addCode(context, code);\n};\n","import { QuickPickItem, ExtensionContext, window } from \"vscode\";\nimport { base32decode } from \"simple-totp\";\nimport { Code } from \"./store/index\";\n\nenum AdditionalEncodings {\n  BASE_32 = \"base32\",\n  OTPAUTH_URI = \"otpauth:// TOTP key\",\n}\n\ninterface State {\n  encoding: BufferEncoding | AdditionalEncodings;\n  key: Buffer;\n  T0: number;\n  TX: number;\n  nDigits: number;\n  prefix: string;\n  name: string;\n  needCustomParams: boolean;\n}\n\ntype PartialStateResolver = (\n  s: Partial<State>\n) => Promise<Partial<State>> | Partial<State>;\n\nconst isFullState = (s: Partial<State>): s is State => {\n  if (s.T0 === undefined) {\n    return false;\n  }\n  if (s.TX === undefined) {\n    return false;\n  }\n  if (s.encoding === undefined) {\n    return false;\n  }\n  if (s.key === undefined) {\n    return false;\n  }\n  if (s.nDigits === undefined) {\n    return false;\n  }\n  if (s.name === undefined) {\n    return false;\n  }\n  if (s.prefix === undefined) {\n    return false;\n  }\n  if (s.needCustomParams === undefined) {\n    return false;\n  }\n  return true;\n};\n\nconst findNextStep = (s: Partial<State>): PartialStateResolver | null => {\n  if (s.encoding === undefined) {\n    return askForEncoding;\n  }\n  if (s.key === undefined) {\n    return askForCode;\n  }\n  if (s.T0 === undefined || s.TX === undefined || s.nDigits === undefined) {\n    if (s.needCustomParams === true) {\n      return askForCustomParams;\n    }\n    return askForParameters;\n  }\n  if (s.name === undefined) {\n    return askForName;\n  }\n  if (s.prefix === undefined) {\n    return askForPrefix;\n  }\n  return null;\n};\n\nconst askForEncoding = async (\n  state: Partial<State>\n): Promise<Partial<State>> => {\n  const encodings = [\n    { label: AdditionalEncodings.BASE_32 },\n    { label: \"hex\" },\n    { label: \"ascii\" },\n    { label: AdditionalEncodings.OTPAUTH_URI },\n  ];\n  const pick = await window.showQuickPick(encodings, {\n    placeHolder: \"Which encoding does your seed have\",\n  });\n  return { ...state, encoding: pick?.label as State[\"encoding\"] | undefined };\n};\n\nconst askForParameters = async (\n  state: Partial<State>\n): Promise<Partial<State>> => {\n  const defaultParams = Symbol();\n  const customParams = Symbol();\n  type TItem = QuickPickItem & { id: symbol };\n  const items: TItem[] = [\n    {\n      id: defaultParams,\n      label: \"Use default parameters\",\n      description: \"T₀ = 0, 30 seconds interval, 6 digits\",\n      detail: \"T₀ = 0, 30 seconds interval, 6 digits\",\n    },\n    { label: \"Custom parameters...\", id: customParams },\n  ];\n\n  const pick = await window.showQuickPick(items, {\n    placeHolder: \"Optional parameters\",\n  });\n\n  if (pick === undefined) {\n    return state;\n  }\n  if (pick.id === defaultParams) {\n    return { ...state, T0: 0, TX: 30, nDigits: 6, needCustomParams: false };\n  }\n  return { ...state, needCustomParams: true };\n};\n\nconst askForName = async (state: Partial<State>): Promise<Partial<State>> => {\n  const name = await window.showInputBox({\n    prompt: \"Name of token\",\n    placeHolder: \"Name of token\",\n    ignoreFocusOut: true,\n  });\n  return { ...state, name };\n};\n\nconst askForPrefix = async (state: Partial<State>): Promise<Partial<State>> => {\n  const prefix = await window.showInputBox({\n    prompt: \"prefix of token\",\n    placeHolder: \"prefix\",\n    ignoreFocusOut: true,\n  });\n  return { ...state, prefix };\n};\n\nconst askForCustomParams = async (\n  state: Partial<State>\n): Promise<Partial<State>> => {\n  const _T0 = await window.showInputBox({\n    placeHolder: \"Initial timestamp\",\n    value: \"0\",\n    ignoreFocusOut: true,\n  });\n  const _TX = await window.showInputBox({\n    placeHolder: \"Interval length (seconds)\",\n    value: \"30\",\n    ignoreFocusOut: true,\n  });\n  const _nDigits = await window.showInputBox({\n    placeHolder: \"Interval length (seconds)\",\n    value: \"6\",\n    ignoreFocusOut: true,\n  });\n\n  return {\n    ...state,\n    T0: _T0 ? parseInt(_T0, 10) : undefined,\n    TX: _TX ? parseInt(_TX, 10) : undefined,\n    nDigits: _nDigits ? parseInt(_nDigits, 10) : undefined,\n  };\n};\n\nconst askForCode = async (state: Partial<State>): Promise<Partial<State>> => {\n  const getPlaceholder = () => {\n    if (state.encoding === AdditionalEncodings.OTPAUTH_URI) {\n      return \"otpauth://\";\n    }\n  };\n\n  const decode = (v: string) => {\n    switch (state.encoding) {\n      case AdditionalEncodings.BASE_32:\n        return base32decode(v.toUpperCase());\n      case AdditionalEncodings.OTPAUTH_URI:\n        throw new Error(\"No decoder\");\n      case \"hex\":\n        const allCharacters = /^[0-9a-h]+$/i.test(v);\n        const charCount = v.length % 2 === 0;\n        if (!allCharacters) {\n          throw new Error(\n            \"Check that all characters are in 0-9,a-h range (case insensitive)\"\n          );\n        }\n        if (!charCount) {\n          throw new Error(\"Input length is uneven\");\n        }\n        return Buffer.from(v, \"hex\");\n      case \"ascii\":\n        const buf = Buffer.from(v, \"ascii\");\n        if (buf.toString(\"ascii\") !== v) {\n          throw new Error(\"Not all characters are in ascii range\");\n        }\n        return buf;\n      default:\n        throw new Error(\"Encoding is undefined\");\n    }\n  };\n  const key = await window.showInputBox({\n    prompt: \"Paste your code\",\n    placeHolder: getPlaceholder(),\n    ignoreFocusOut: true,\n    validateInput: (v) => {\n      try {\n        decode(v);\n      } catch (error) {\n        return error.message;\n      }\n    },\n  });\n  if (key !== undefined) {\n    return { ...state, key: decode(key) };\n  }\n  throw new Error(\"Key is undefined\");\n};\n\nexport async function addTOTP(context: ExtensionContext) {\n  async function collectInputs() {\n    let state = {};\n\n    while (!isFullState(state)) {\n      const step = findNextStep(state);\n      if (step === null) {\n        throw new Error(\"no steps\");\n      }\n      state = await step(state);\n    }\n\n    return state;\n  }\n\n  const state = await collectInputs();\n  const code: Code = {\n    name: state.name,\n    secret: state.key.toString(\"hex\"),\n    type: \"hex\",\n    prefix: state.prefix,\n    T0: state.T0,\n    // state.TX is in seconds, Code['TX'] is in milliseconds\n    TX: state.TX * 1000,\n    nDigits: state.nDigits,\n  };\n  window.showInformationMessage(`Creating Application Service '${state.name}'`);\n  return code;\n}\n","import {\n  ExtensionContext,\n  window,\n  QuickPickItem,\n  Disposable,\n  commands,\n} from \"vscode\";\nimport { replaceCode, deleteCode } from \"../store/context\";\nimport { Result } from \"../pickOTP\";\nimport { Code } from \"../store/index\";\nimport { Command } from \"../commands\";\nimport { auto } from \"../store/versions/auto\";\n\nexport const pickForEdit = async (data: Code[]): Promise<Result<Code>> => {\n  return await new Promise((resolve, reject) => {\n    const disposables: Disposable[] = [];\n    const dispose = () => disposables.forEach((it) => it.dispose());\n    type Item = QuickPickItem & { code: Code };\n    const items: Item[] = data.map((code) => ({\n      code: code,\n      label: code.name,\n    }));\n\n    const qp = window.createQuickPick<Item>();\n    disposables.push(qp);\n    qp.title = \"Select item to edit\";\n    qp.items = items;\n\n    disposables.push(\n      qp.onDidChangeSelection((items) => {\n        const data = items[0].code;\n        resolve({ button: false, data });\n        dispose();\n      }),\n      qp.onDidHide(() => {\n        dispose();\n        reject();\n      })\n    );\n    qp.show();\n  });\n};\nexport const deleteRoutine = async (context: ExtensionContext, code: Code) => {\n  const confirmation = await window.showInputBox({\n    placeHolder: `Please type \"${code.name}\" to confirm deletion`,\n    prompt: `Before deleting this account, make sure that you have other means of generating codes for it`,\n  });\n  if (confirmation === code.name) {\n    deleteCode(context, code.name);\n  }\n};\nexport const renameRoutine = async (context: ExtensionContext, code: Code) => {\n  const newName = await window.showInputBox({\n    prompt: `Enter new name for ${code.name}`,\n    value: code.name,\n  });\n  if (newName === undefined) {\n    return;\n  }\n  await replaceCode(context, code.name, { ...code, name: newName });\n};\nexport const totpEdit = async (context: ExtensionContext) => {\n  try {\n    const data = await auto.loadFromState(context);\n    const entry = await pickForEdit(data);\n    if (entry.button) {\n      return;\n    }\n    const code = entry.data;\n    const RENAME = { label: \"Rename\" };\n    const DELETE = { label: \"Delete\" };\n    const result = await window.showQuickPick([RENAME, DELETE]);\n    if (!result) {\n      return;\n    }\n    if (result === RENAME) {\n      await renameRoutine(context, code);\n    }\n    if (result === DELETE) {\n      await deleteRoutine(context, code);\n    }\n\n    await commands.executeCommand(Command.PICK);\n  } catch (x) {\n    // debugger;\n  }\n};\n","import { ExtensionContext, window, StatusBarAlignment } from \"vscode\";\nimport { Command } from \"./commands\";\nexport const makeStatusBarItem = () => {\n  const myStatusBarItem = window.createStatusBarItem(\n    StatusBarAlignment.Right,\n    100\n  );\n\n  myStatusBarItem.show();\n  myStatusBarItem.text = \"$(key)\";\n  myStatusBarItem.command = Command.PICK;\n  return myStatusBarItem;\n};\n","import { ExtensionContext, window, workspace } from \"vscode\";\nimport { auto } from \"../store/versions/auto\";\nimport { askForEncryptionPassphrase } from \"../store/askForEncryptionPassphrase\";\n\nexport const totpBackup = async (context: ExtensionContext) => {\n  try {\n    const codes = await auto.loadFromState(context);\n    const passphrase = await askForEncryptionPassphrase();\n    if (passphrase === undefined) {\n      throw new Error(\"passphrase dialog aborted\");\n    }\n    const content = await auto.backup(context, codes, passphrase);\n\n    const d = await workspace.openTextDocument({ content, language: \"json\" });\n\n    window.showTextDocument(d);\n    window.showInformationMessage(\n      \"Save this document somewhere and don't forget the passphrase!\"\n    );\n  } catch (x) {\n    // debugger;\n  }\n};\n","import { window } from \"vscode\";\nexport const askForEncryptionPassphrase = async () => {\n  const passphrase = await window.showInputBox({\n    prompt: \"Enter encryption passphrase\",\n    password: true,\n    placeHolder: \"Leave this empty if you don't want to encrypt (UNSAFE)\",\n  });\n  return passphrase;\n};\n","import { ExtensionContext, window, workspace } from \"vscode\";\nimport { merge, Persist, PassphraseGetter } from \"../store/context\";\n\nimport { auto } from \"../store/versions/auto\";\nconst passphraseGetter: PassphraseGetter = async () => {\n  const passphrase = await window.showInputBox({\n    prompt: \"Enter passphrase used for encryption\",\n    password: true,\n  });\n  if (passphrase === undefined) {\n    return null;\n  }\n  return passphrase;\n};\nexport const totpRestore = async (context: ExtensionContext) => {\n  try {\n    const uri = await window.showOpenDialog({\n      openLabel: \"Restore seeds\",\n      canSelectMany: false,\n      canSelectFiles: true,\n    });\n    if (!uri) {\n      return;\n    }\n    const data = await workspace.fs.readFile(uri[0]);\n    const backupData = data.toString();\n    const codes = await auto.restore(context, backupData, passphraseGetter);\n\n    if (codes.length !== 0) {\n      await merge(context, codes);\n      window.showInformationMessage(\n        `${codes.length} passphrases have been imported`\n      );\n    }\n  } catch (x) {\n    window.showErrorMessage(\n      `An error occured during decryption: \\n${x.message}`\n    );\n  }\n};\n","import { ExtensionContext, window } from \"vscode\";\n\nimport { auto } from \"../store/versions/auto\";\n\nexport const totpClear = async (context: ExtensionContext) => {\n  try {\n    const YES = { label: \"Confirm\" };\n\n    const items = new Array(10).map((x) => ({ label: \"---\" }));\n    const index = Math.round(Math.random() * 8) + 1;\n    items[index] = YES;\n    const result = await window.showQuickPick(items);\n\n    if (result === YES) {\n      await auto.clear(context);\n    }\n  } catch (x) {\n    // debugger;\n  }\n};\n"],"sourceRoot":""}